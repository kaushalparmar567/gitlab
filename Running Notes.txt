
Topics covered 
1. Local repository 
2. Working area,  staged area, local repository  area
3. What is git add,  git rm git restore,  git commit
4. Git revert to earlier commit  							
5. Github repositories 
6. Cloning remote repository 
7. Git clone vs git pull      								
8. Link remote repository with git remote add 
9. Git push to remote repository 
10. Concepts of branches -creating branches,  going to other branches,  push branch to github,  merge branch - 


Configure git user details
==========================
git config --global user.name "<github username>"
git config --global user.email "<github email>"


Initializing git repo
=====================

1. 

git init
git remote add origin https://github.com/narendra-cs/DjangoApp.git
git fetch --all
git pull origin master

2. 

git clone https://github.com/narendra-cs/DjangoApp.git

git init CDACProject

# create files README.md and .gitignore

# github will this into staging area and commit these files

there two way

1. 
	# create empty local repo with git init -- Done git init .
	# connect with remote repo                 -- Done
	# copy ( pull) the content of remote repo
	
2. # Clone the repo

	git clone https://github.com/narendra-cs/CDACProject.git



# undoing the changes

1. undoing uncommited changes
	a. undoing changes from working directory of tracked files
	
		git checkout -- <filename>				# for single file
		git checkout -- . 						# for all files
		
	b. undoing changes from staging area
		git restore --staged <filename>			# for single file
		git restore --staged .					# for all files	
		
2. undoing commited changes

	# Resetting changes with git reset
	git reset <commit id>		
	or
	git reset HEAD~1
	
	
	# Revert commited changes with git revert
	git revert <commit id>
	git revert -n < commit id >				# No auto new commmit
	
	
# Cleaning Working Area

	git clean -f -d 
	
	
	
	

















